name: interop
on: push

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      servers: ${{ steps.set-servers.outputs.servers }}
      clients: ${{ steps.set-clients.outputs.clients }}
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.15'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: go/src/github.com/${{ github.repository }}
      - name: Build test runner
        run: make runner
        working-directory: go/src/github.com/${{ github.repository }}
      - name: Determine clients
        id: set-clients
        run: |
          CLIENTS=$(./bin/runner --ci-list-clients)
          echo $CLIENTS
          echo "::set-output name=clients::$CLIENTS"
        working-directory: go/src/github.com/${{ github.repository }}
      - name: Determine servers
        id: set-servers
        run: |
          SERVERS=$(./bin/runner --ci-list-servers)
          echo $SERVERS
          echo "::set-output name=servers::$SERVERS"
        working-directory: go/src/github.com/${{ github.repository }}
  tests:
    needs: [ config ]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        server: ${{ fromJson(needs.config.outputs.servers) }}
        client: ${{ fromJson(needs.config.outputs.clients) }}
    name: (${{ matrix.server }} - ${{ matrix.client }})
    steps:
      - uses: actions/setup-go@v1
        with:
          go-version: '1.15'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
          path: go/src/github.com/${{ github.repository }}
      - name: Enable IPv6 support
        run: sudo modprobe ip6table_filter
      - name: Install Tshark
        run: sudo apt-get -y install tshark
      - name: Build test runner
        run: make runner
        working-directory: go/src/github.com/${{ github.repository }}
      - name: Run tests
        run: |
          ./bin/runner --client=${{ matrix.client }} --server=${{ matrix.server }} --build
          ./bin/runner --client=${{ matrix.client }} --server=${{ matrix.server }} --alltestcases
          mkdir -p logs/${{ matrix.server }}_${{ matrix.client }}
          mv output.txt logs/${{ matrix.server }}_${{ matrix.client }}/
        working-directory: go/src/github.com/${{ github.repository }}
